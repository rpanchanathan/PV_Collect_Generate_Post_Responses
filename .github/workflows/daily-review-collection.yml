  name: Daily Review Collection

  on:
    schedule:
      - cron: '0 1 * * *'
    workflow_dispatch:

  jobs:
    collect-reviews:
      runs-on: ubuntu-latest

      steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          cd PV_Reviews
          python -m pip install --upgrade pip
          pip install -r requirements-clean.txt

      - name: Install Playwright browsers
        run: |
          cd PV_Reviews
          playwright install chromium

      - name: Run review collection
        env:
          GOOGLE_EMAIL: ${{ secrets.GOOGLE_EMAIL }}
          GOOGLE_PASSWORD: ${{ secrets.GOOGLE_PASSWORD }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          cd PV_Reviews
          python src/collectors/review_collector.py

      - name: Upload collected data
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: review-data
          path: PV_Reviews/data/

      - name: Send email notification
        if: always()
        env:
          SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
          SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD }}
          RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
        run: |
          cd PV_Reviews
          python3 -c "
          import smtplib, os
          from email.mime.text import MimeText
          from datetime import datetime

          now = datetime.now()
          timestamp = now.isoformat()
          msg = MimeText('PV Reviews collection completed at ' + timestamp)
          msg['Subject'] = 'PV Reviews Collection - ' + now.strftime('%Y-%m-%d')
          msg['From'] = os.getenv('SENDER_EMAIL')
          msg['To'] = os.getenv('RECIPIENT_EMAIL')

          server = smtplib.SMTP(os.getenv('SMTP_SERVER'),int(os.getenv('SMTP_PORT')))
          server.starttls()
          server.login(os.getenv('SENDER_EMAIL'), os.getenv('SENDER_PASSWORD'))
          server.send_message(msg)
          server.quit()
          print('Email sent successfully')
          "
